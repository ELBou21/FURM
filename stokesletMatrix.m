function [ A ] = stokesletMatrix(trackerPts, forcingPts, epsilon, mu)
% Create the 3m x 3n regularized Stokeslet matrix to calculate the velocity at m
% tracker points generated by forces at n forcing points

% trackerPts is a 3m x 1 vector of tracking point locations
% forcingPts is a 3n x 1 vector of forcing point locations
% epsilon is the spreading parameter (scalar)
% mu is the viscosity (scalar)

% Calculates the number of tracking and forcing points
m = length(trackerPts)/3;
n = length(forcingPts)/3;

% Initialize the matrix
A = zeros(3*m,3*n);

%loops through each combination of tracking points and forcing points
for p = 1:m
    for q=1:n
        %calculates the vector between forcing and tracking points
        xhat = trackerPts(3*p-2:3*p)-forcingPts(3*q-2:3*q);
        r = norm(xhat);
        a = zeros(3,3);
        
        %creates the 3x3 Stokeslet matrix to place into the correct rows
        %and columns of the full matrix, A
        for i = 1:3
            for j = 1:3
                a(i,j) = (i==j)*(((r.^2)+2*(epsilon.^2))/(r.^2+(epsilon.^2)).^(3/2))+((xhat(i)*xhat(j))/((r.^2+(epsilon.^2)).^(3/2)));
            end
        end
        A(3*p-2:3*p,3*q-2:3*q) = (1/(8*pi*mu))*a;
    end
end

end
